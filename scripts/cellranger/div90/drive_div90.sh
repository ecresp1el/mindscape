#!/usr/bin/env bash
set -euo pipefail

# Simple driver for the DIV90 Cell Ranger run.
# Modes:
#   dry   – plan only (no execution)
#   local – run locally
#   slurm – submit via sbatch
#
# It sources the shared config and calls the existing wrapper/submit scripts
# without moving or changing them, to avoid conflicts.

usage() {
  cat <<EOF
Usage: $0 {dry|local|slurm}

Env you can set (overrides config defaults):
  RUNSTAMP                Timestamp suffix for TEST_DIR (autogenerated)
  TEST_DIR                Working directory (defaults under /nfs/turbo/umms-parent)
  TURBO_CONFIG_SOURCE     Path to DIV90 config.csv
  PROBE_PATH              10x Flex probe-set CSV
  REF_GENOME              refdata-gex folder (or TURBO_REF_BASE + REF_SUBPATH)
  OUTPUT_ID               Cell Ranger --id (default: div90-reanalysis)
  CORES                   Local cores for Snakemake

Slurm-only env (passed through):
  ACCOUNT PARTITION QOS TIME CPUS MEM MAIL_USER JOB_NAME LOG_DIR

Examples:
  # Dry-run with defaults from config_div90.sh
  $0 dry

  # Real local run
  $0 local

  # Slurm submission (set your cluster options first)
  TIME=24:00:00 CPUS=32 MEM=128G ACCOUNT=parent0 $0 slurm
EOF
}

MODE="${1:-}"
if [[ -z "$MODE" || "$MODE" == "-h" || "$MODE" == "--help" ]]; then
  usage; exit 0
fi

DRIVER_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ROOT_DIR="$( cd "$DRIVER_DIR/.." && pwd )"           # scripts/cellranger
SCRIPTS_DIR="$ROOT_DIR/scripts"                        # scripts/cellranger/scripts
SLURM_DIR="$ROOT_DIR/slurm"                            # scripts/cellranger/slurm

CONFIG_FILE="$SCRIPTS_DIR/config_div90.sh"
WRAPPER="$SCRIPTS_DIR/create_project_cellranger_div90.sh"
SUBMIT="$SLURM_DIR/submit_cellranger_div90.sh"

[[ -f "$CONFIG_FILE" ]] || { echo "❌ Missing: $CONFIG_FILE" >&2; exit 1; }
[[ -f "$WRAPPER" ]]     || { echo "❌ Missing: $WRAPPER" >&2; exit 1; }
[[ -f "$SUBMIT" ]]      || { echo "❌ Missing: $SUBMIT"  >&2; exit 1; }

# Ensure RUNSTAMP is consistent across sourcing + wrapper
export RUNSTAMP=${RUNSTAMP:-$(date +%Y%m%d_%H%M%S)}

# Source config to realize defaults (respect env overrides)
source "$CONFIG_FILE"
# Export key vars so submit sees them (for logs and env propagation)
export TEST_DIR TURBO_CONFIG_SOURCE PROBE_PATH REF_GENOME TURBO_REF_BASE REF_SUBPATH OUTPUT_ID CORES SNAKEFILE
# Also export an absolute wrapper path so the job can find it from spool
export WRAPPER_PATH="$WRAPPER"

echo "🔧 Using configuration:"
echo "  TEST_DIR            : ${TEST_DIR}"
echo "  TURBO_CONFIG_SOURCE : ${TURBO_CONFIG_SOURCE}"
echo "  PROBE_PATH          : ${PROBE_PATH}"
echo "  REF_GENOME          : ${REF_GENOME:-${TURBO_REF_BASE}/${REF_SUBPATH}}"
echo "  OUTPUT_ID           : ${OUTPUT_ID}"
echo "  CORES               : ${CORES}"

case "$MODE" in
  dry)
    echo "🧪 DRY-RUN: planning only"
    DRY_RUN=1 bash "$WRAPPER"
    ;;
  local)
    echo "🚀 LOCAL RUN: executing Snakemake/Cell Ranger"
    DRY_RUN=0 bash "$WRAPPER"
    ;;
  slurm)
    echo "📨 SLURM SUBMIT: submitting job via sbatch"
    # submit script already propagates env via --export=ALL
    bash "$SUBMIT"
    ;;
  *)
    echo "❌ Unknown mode: $MODE" >&2
    usage
    exit 1
    ;;
esac
