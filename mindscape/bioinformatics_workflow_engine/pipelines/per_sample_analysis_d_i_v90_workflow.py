# This file was auto-generated by create_workflow_scaffold.py
# Class: PerSampleAnalysisDIV90Workflow
# File: per_sample_analysis_d_i_v90_workflow.py (snake_case match required for registration)

from .base_workflow import BaseWorkflow

class PerSampleAnalysisDIV90Workflow(BaseWorkflow):
    """
    PerSampleAnalysisDIV90Workflow class that inherits from BaseWorkflow.
    Implements specific logic for the PerSampleAnalysisDIV90Workflow pipeline.
    """

    def __init__(self, config):
        super().__init__(config)
        self.workflow_name = "PerSampleAnalysisDIV90Workflow"
        self.setup_paths()
        self.use_slurm = True

    def run(self):
        """
        Execute the PerSampleAnalysisDIV90Workflow workflow.

        This workflow scans the Cell Ranger multi output for individual sample folders
        and generates a SLURM array job that runs a per-sample R script using:
        - MINDSCAPE_SINGLE_SAMPLE
        - MINDSCAPE_OUTPUT_DIR
        """

        if not self.config.get("force_rerun", False) and self.is_already_completed():
            print(f"‚úÖ Skipping {self.workflow_name}; already completed.")
            return

        self.log_start()

        # Define the path where Cell Ranger multi output should exist
        per_sample_base = self.project_path / "results" / "cellranger_multi_CellRangerWorkflow" / "outs" / "per_sample_outs"
        if not per_sample_base.exists():
            raise FileNotFoundError(f"‚ùå Could not find per_sample_outs folder: {per_sample_base}")

        sample_ids = [d.name for d in per_sample_base.iterdir() if d.is_dir()]
        if not sample_ids:
            raise RuntimeError(f"‚ùå No sample directories found under {per_sample_base}")

        print(f"üß† Found {len(sample_ids)} samples for per-sample analysis")

        # Build SLURM command (not a full script string)
        rscript_path = self.project_path / "workflows" / "ventral_sosrs_workflow_2025" / "mindscape_process_sample.R"
        sample_list_str = " ".join(sample_ids)
        command = f"""
SAMPLES=({sample_list_str});
SAMPLE_ID=${{SAMPLES[$SLURM_ARRAY_TASK_ID]}};
export MINDSCAPE_SINGLE_SAMPLE=$SAMPLE_ID;
export MINDSCAPE_OUTPUT_DIR={self.project_path}/results/per_sample_analysis/$SAMPLE_ID;
mkdir -p $MINDSCAPE_OUTPUT_DIR;
Rscript {rscript_path}
"""

        job_id = self.submit_job(
            command=command,
            job_name="div90_analysis_array",
            dry_run=self.config.get("dry_run", True)
        )

        if job_id:
            print(f"‚úÖ SLURM array job submitted: {job_id}")
        else:
            print(f"‚úÖ SLURM array job was previewed (dry run mode)")

        self.log_end()
